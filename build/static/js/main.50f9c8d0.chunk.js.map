{"version":3,"sources":["components/Table.js","components/Pagination.js","components/Filter.js","components/ItemInfo.js","components/Load.js","components/Main.js","components/large.js","components/SelectSize.js","App.js","serviceWorker.js","index.js"],"names":["SortedTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sort","sortBy","columns","bind","assertThisInitialized","compareBy","key","a","b","arrayCopy","toConsumableArray","data","setState","sorted","_this2","out","slice","pos","from","to","length","react_default","createElement","Alert","color","Table","hover","responsive","className","map","item","index","onClick","join","select","Component","defaultProps","Pagi","perPage","Pagination","Array","Math","ceil","fill","x","i","PaginationItem","Link","concat","current","result","Filter","value","filterKeys","splitButtonOpen","filterCol","handleChange","handleSubmit","toggleSplit","selectCol","event","dataFilter","onComplite","preventDefault","target","val","keys","filter","toString","toLowerCase","substring","Form","onSubmit","InputGroup","InputGroupButtonDropdown","addonType","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","Input","type","id","onChange","placeholder","InputGroupAddon","Button","ItemInfo","ListGroup","ListGroupItem","firstName","lastName","description","address","city","zip","Load","Main","work","selectedItem","error","redirect","size","filterResult","selectItem","URL","fetch","then","res","json","catch","match","params","number","Redirect","components_Load","page","components_Filter","components_Table","components_ItemInfo","components_Pagination","Large","SelectSize","App","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.50f9c8d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Alert, Table} from 'reactstrap';\r\n\r\n\r\nclass SortedTable extends Component {\r\n    static defaultProps = {\r\n        data: [],\r\n        pos: {\r\n            from: 0,\r\n            to: 50\r\n        },\r\n        sorted: () => {},\r\n        select: () => {}\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sort: 'ASC',\r\n            sortBy: null,\r\n            columns: ['id', 'firstName', 'lastName', 'email', 'phone'],\r\n        };\r\n        this.sortBy = this.sortBy.bind(this);\r\n        this.compareBy = this.compareBy.bind(this);\r\n    }\r\n\r\n    compareBy(key, sort) {\r\n\r\n        if(sort === 'DESC') {\r\n            return function (a, b) {\r\n                if (a[key] < b[key]) return -1;\r\n                if (a[key] > b[key]) return 1;\r\n                return 0;\r\n            };\r\n        }\r\n        else {\r\n            return function (a, b) {\r\n                if (a[key] > b[key]) return -1;\r\n                if (a[key] < b[key]) return 1;\r\n                return 0;\r\n            };\r\n        }\r\n    }\r\n\r\n    sortBy(key) {\r\n        let sort = this.state.sort === 'DESC' ? 'ASC' : 'DESC';\r\n        let arrayCopy = [...this.props.data];\r\n        arrayCopy.sort(this.compareBy(key, sort));\r\n        this.setState({\r\n            sort: sort,\r\n            sortBy: key\r\n        });\r\n        this.props.sorted(arrayCopy);\r\n    }\r\n\r\n    render() {\r\n        let data = this.props.data;\r\n        let out = data.slice(this.props.pos.from, this.props.pos.to);\r\n        if(out.length === 0) {\r\n            return (\r\n                <Alert color=\"info\">\r\n                    Not found!\r\n                </Alert>);\r\n        }\r\n        return (\r\n                <Table hover responsive className={'data-table'}>\r\n                    <thead>\r\n                    <tr>\r\n                        {this.state.columns.map((item, index) => (\r\n                            <th key={'header-'+index} onClick={() => this.sortBy(item)}>{item} <span className={[this.state.sort, this.state.sortBy === item ? 'active' : ''].join(' ')}></span></th>\r\n                        ))}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {out.map((item, index) => (\r\n                        <tr key={'row-'+index} onClick={() => this.props.select(item)}>\r\n                            {this.state.columns.map((key, index) => (\r\n                                <th key={'col-'+index}>{item[key]}</th>\r\n                            ))}\r\n                        </tr>))}\r\n                    </tbody>\r\n                </Table>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default SortedTable;\r\n","import React, { Component } from 'react';\r\nimport { Pagination, PaginationItem } from 'reactstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Pagi extends Component {\r\n    static defaultProps = {\r\n        data: [],\r\n        perPage: 50,\r\n        current: 1,\r\n        result: () => {},\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    render() {\r\n        if (this.props.data.length <= this.props.perPage) return null;\r\n        return (\r\n            <div>\r\n                <Pagination>\r\n                    {Array((Math.ceil(this.props.data.length / this.props.perPage))).fill(1).map((x, i) =>\r\n                        (<PaginationItem key={'page-'+i} >\r\n                            <Link to={`/large/${i+1}`} className={'page-link'}>\r\n                                {i+1}\r\n                            </Link>\r\n                        </PaginationItem>)\r\n                    )}\r\n                </Pagination>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Pagi;\r\n","import React, { Component } from 'react';\r\nimport {Button, Form, Input, DropdownToggle, InputGroupAddon, InputGroup, DropdownItem, InputGroupButtonDropdown, DropdownMenu} from 'reactstrap';\r\n\r\nclass Filter extends Component {\r\n    static defaultProps = {\r\n        data: [],\r\n        onComplite: () => {},\r\n    };\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: props.data,\r\n            value: '',\r\n            filterKeys: ['id', 'firstName', 'lastName', 'email', 'phone'],\r\n            splitButtonOpen: false,\r\n            filterCol: 'all'\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleSplit = this.toggleSplit.bind(this);\r\n        this.selectCol = this.selectCol.bind(this);\r\n    }\r\n    handleSubmit(event) {\r\n        let data = this.dataFilter(this.state.value);\r\n        this.props.onComplite(data);\r\n        event.preventDefault();\r\n    }\r\n    handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n    dataFilter(val) {\r\n        let keys = this.state.filterKeys;\r\n        if (this.state.filterCol !== 'all')  {\r\n            keys = [this.state.filterCol];\r\n        }\r\n        let filter = this.state.data.filter((item) => {\r\n            let result = keys.filter((key, index) => {\r\n                if(item[key].toString().toLowerCase().substring(0, val.length) === val.toLowerCase()) {\r\n                    return item;\r\n                }\r\n                return false;\r\n            });\r\n            if(result.length >= 1) {\r\n                return result\r\n            }\r\n            return false;\r\n        });\r\n        return filter;\r\n    }\r\n\r\n    toggleSplit() {\r\n        this.setState({\r\n            splitButtonOpen: !this.state.splitButtonOpen\r\n        });\r\n    }\r\n\r\n    selectCol(item) {\r\n        this.setState({\r\n            filterCol: item\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let keys = ['all'].concat(this.state.filterKeys);\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <InputGroup>\r\n                    <InputGroupButtonDropdown addonType=\"prepend\" isOpen={this.state.splitButtonOpen} toggle={this.toggleSplit}>\r\n                        <DropdownToggle caret>\r\n                            {this.state.filterCol}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                        {keys.map((item, index) => (\r\n                            <DropdownItem onClick={ () => this.selectCol(item) }>{item}</DropdownItem>\r\n                        ))}\r\n                        </DropdownMenu>\r\n                    </InputGroupButtonDropdown>\r\n                    <Input type=\"text\" id=\"filter\" value={this.state.value} onChange={this.handleChange} placeholder=\"Search\" />\r\n                    <InputGroupAddon addonType=\"append\"><Button color=\"secondary\">Search</Button></InputGroupAddon>\r\n                </InputGroup>\r\n            </Form>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport {ListGroup, ListGroupItem} from \"reactstrap\";\r\n\r\n\r\n\r\nclass ItemInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.item) return null;\r\n        let item = this.props.item;\r\n        return (\r\n            <ListGroup>\r\n                <ListGroupItem className=\"justify-content-between\">Выбран пользователь <b>{item.firstName} {item.lastName}</b></ListGroupItem>\r\n                <ListGroupItem className=\"justify-content-between\">Описание:<textarea>{item.description}</textarea></ListGroupItem>\r\n                <ListGroupItem className=\"justify-content-between\">Адрес проживания: <b>{item.address.city}</b></ListGroupItem>\r\n                <ListGroupItem className=\"justify-content-between\">Город: <b>{item.address.city}</b></ListGroupItem>\r\n                <ListGroupItem className=\"justify-content-between\">Провинция/штат: <b>{item.address.state}</b></ListGroupItem>\r\n                <ListGroupItem className=\"justify-content-between\">Индекс: <b>{item.address.zip}</b></ListGroupItem>\r\n            </ListGroup>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ItemInfo;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass Load extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'row align-items-center justify-content-center full-height'}>\r\n                <div id=\"fountainG\">\r\n                    <div id=\"fountainG_1\" className={\"fountainG\"}></div>\r\n                    <div id=\"fountainG_2\" className={\"fountainG\"}></div>\r\n                    <div id=\"fountainG_3\" className={\"fountainG\"}></div>\r\n                    <div id=\"fountainG_4\" className={\"fountainG\"}></div>\r\n                    <div id=\"fountainG_5\" className={\"fountainG\"}></div>\r\n                    <div id=\"fountainG_6\" className={\"fountainG\"}></div>\r\n                    <div id=\"fountainG_7\" className={\"fountainG\"}></div>\r\n                    <div id=\"fountainG_8\" className={\"fountainG\"}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Load;\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SortedTable from './Table'\r\nimport Pagi from './Pagination'\r\nimport Filter from './Filter'\r\nimport ItemInfo from './ItemInfo'\r\nimport Load from './Load'\r\nimport { Alert } from 'reactstrap';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            work: null,\r\n            value: '',\r\n            selectedItem: null,\r\n            perPage: 50,\r\n            error: null,\r\n            redirect: false\r\n        };\r\n        this.size = 32;\r\n        this.result = this.result.bind(this);\r\n        this.filterResult = this.filterResult.bind(this);\r\n        this.selectItem = this.selectItem.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const URL = \"www.filltext.com.\"+this.size+\".json\";\r\n        fetch(URL).then(res => res.json()).then(json => {\r\n            this.setState({\r\n                data: json,\r\n                work: json\r\n            });\r\n        }).catch((error) => {\r\n            this.setState({\r\n                error: error\r\n            });\r\n        } );;\r\n    }\r\n\r\n    result(data) {\r\n        this.setState({\r\n            work: data\r\n        });\r\n    }\r\n\r\n    filterResult(data) {\r\n        let redirect = false;\r\n        if(this.props.match.params.number) {\r\n            redirect = true;\r\n        }\r\n        this.setState({\r\n            work: data,\r\n            redirect: redirect\r\n        });\r\n    }\r\n\r\n    selectItem(item) {\r\n        this.setState({\r\n            selectedItem: item,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            this.setState({\r\n                redirect: false\r\n            });\r\n            return (<Redirect to='/large'/>);\r\n        }\r\n        if(this.state.error) return (\r\n            <div className={'row align-items-center justify-content-center full-height'}>\r\n                <Alert color=\"danger\">\r\n                    {this.state.error.toString()}\r\n                </Alert>\r\n            </div>);\r\n\r\n        const data = this.state.work;\r\n\r\n        if (!data) return ( <Load/> );\r\n\r\n        const page = !this.props.match.params.number ? 1 : this.props.match.params.number;\r\n        const pos = {from:(page - 1) * this.state.perPage, to:(page * this.state.perPage)};\r\n        return (\r\n                <div className={'row justify-content-center'}>\r\n                    <div className={'col'}>\r\n                        <Filter data={this.state.data}\r\n                                onComplite={this.filterResult} />\r\n                        <SortedTable data={data}\r\n                             select={this.selectItem}\r\n                             sorted={this.result}\r\n                             pos={pos} />\r\n                        <ItemInfo item={this.state.selectedItem}/>\r\n                        <Pagi data={this.state.work}\r\n                              perPage={this.state.perPage}\r\n                              result={this.result}/>\r\n                        </div>\r\n                        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import Main  from './Main';\r\n\r\nclass Large extends Main {\r\n    constructor(props) {\r\n        super(props);\r\n        this.size = 1000;\r\n    }\r\n}\r\n\r\nexport default Large;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nclass SelectSize extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={'row align-items-center justify-content-center full-height'}>\r\n                    <nav className={'col'}>\r\n                        <ul className={'list-unstyled'}>\r\n                            <li className={'p-2'}><Link to='/small' className={'btn btn-primary btn-block'}>Мало</Link></li>\r\n                            <li className={'p-2'}><Link to='/large' className={'btn btn-primary btn-block'}>Много</Link></li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectSize;\r\n","import React, { Component } from 'react';\nimport Main from './components/Main'\nimport Large from './components/large';\nimport SelectSize from './components/SelectSize';\nimport {Switch, Route, HashRouter} from 'react-router-dom';\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n  }\n\n  render() {\n    return (\n        <div id=\"app\">\n            <HashRouter>\n                <main className={'container'}>\n                    <Switch>\n                        <Route exact path='/'\n                               component={SelectSize}/>\n                        <Route path='/small'\n                               component={Main} />\n                        <Route exact path='/large'\n                               component={Large} />\n                        <Route path='/large/:number'\n                               component={Large} />\n                    </Switch>\n                </main>\n            </HashRouter>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render((<App />), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}